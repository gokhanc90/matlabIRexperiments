function [criterion ms, significant, m1, m2, m3, oracle,labels ] = criteriaFunSVM(trainX2,trainY2,testX,testY)
%CRITERIAFUN Summary of this function goes here
%   Detailed explanation goes here
LabelsY=categorical(trainY2(:,4));

%SVM%
template = templateSVM(...
    'KernelFunction', 'gaussian', ...
    'PolynomialOrder', [], ...
    'KernelScale', 10, ...
    'BoxConstraint', 1, ...
    'Standardize', true);
Mdl = fitcecoc(...
    trainX2, ...
    LabelsY, ...
    'Learners', template, ...
    'Coding', 'onevsone', ...
    'ClassNames', categorical({'0'; '1'; '2'}, {'0' '1' '2' 'Label'}));

%-------------------------------------------------%

[pred,ci] = predict(Mdl,testX);
if ~iscategorical(pred) 
    error('Predictions must be categorical')
end
labels=pred;
 [ms, significant, m1, m2, m3,oracle ] = AverageNDCG(testY,pred);


criterion=1-ms;
end

